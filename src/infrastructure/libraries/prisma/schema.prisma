generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  products    Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  categoryId  Int
  active      Boolean? @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  category    Category @relation(fields: [categoryId], references: [id])
  orderItems  OrderItem[]
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  cpf       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id             Int         @id @default(autoincrement())
  customerId     Int?
  status         OrderStatus
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  statusUpdatedAt DateTime   @default(now())
  totalAmount    Float
  pickupCode     String?
  customer       Customer?   @relation(fields: [customerId], references: [id])
  items          OrderItem[]
  payment        Payment?
}

model OrderItem {
  id         Int      @id @default(autoincrement())
  orderId    Int
  productId  Int
  productName String
  unitPrice  Float
  quantity   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  order      Order    @relation(fields: [orderId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
}

model Payment {
  id           Int           @id @default(autoincrement())
  orderId      Int           @unique
  amount       Float
  paymentStatus PaymentStatus
  paidAt       DateTime
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  order        Order         @relation(fields: [orderId], references: [id])
}

enum OrderStatus {
  RECEIVED
  PREPARING
  READY
  FINISHED
}

enum PaymentStatus {
  PAID
  NOT_PAID
}